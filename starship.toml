[directory]
style = "sapphire"
format = "[$path]($style)"
truncation_length = 4
truncation_symbol = "…/"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "

[os]
disabled = true

[custom.giturl]
description = "Display symbol for remote Git server"
command = '''
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL"
'''
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output"

[git_branch]
symbol = "[](black) "
style = "fg:lavender bg:black"
format = '  on [$symbol$branch]($style)[](black)'

[git_status]
format = ' [($all_status$ahead_behind )]($style)'

[dotnet]
symbol = ''
style = 'bold purple'
format = '[$symbol($version)]($style)'

[lua]
symbol = ' '
style = 'fg:teal'
format = '[$symbol($version)]($style)'

[nodejs]
symbol = ""
style = 'fg:yellow'
format = '[ $symbol( $version) ]($style)'

[c]
symbol = " "
style = 'fg:red'
format = '[[ $symbol( $version) ]]($style)'

[rust]
symbol = ""
style = 'fg:orange'
format = '[[ $symbol( $version) ]]($style)'

[golang]
symbol = ""
style = 'fg:blue'
format = '[ $symbol( $version) ]($style)'
detect_files = ["go.mod"]

[php]
symbol = ""
style = 'fg:magenta'
format = '[[ $symbol( $version) ]]($style)'

[java]
symbol = " "
style = 'fg:green'
format = '[[ $symbol( $version) ]]($style)'

[kotlin]
symbol = ""
style = 'fg:cyan'
format = '[[ $symbol( $version) ]]($style)'

[haskell]
symbol = ""
style = 'fg:bright-green'
format = '[[ $symbol( $version) ]]($style)'

[python]
symbol = ""
style = 'fg:yellow'
format = '[[ $symbol( $version) ]]($style)'

[docker_context]
symbol = ""
style = 'fg:blue'
format = '[ $symbol( $context) ]($style)'
